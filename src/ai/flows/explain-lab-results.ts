// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Provides a plain language explanation of lab results,
 * highlighting potential health risks or areas of concern.
 *
 * - explainLabResults - A function that handles the lab results explanation process.
 * - ExplainLabResultsInput - The input type for the explainLabResults function.
 * - ExplainLabResultsOutput - The return type for the explainLabResults function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ExplainLabResultsInputSchema = z.object({
  labResults: z
    .string()
    .describe('The lab results data in a structured format, such as JSON or CSV.'),
  patientInformation: z.string().optional().describe('Additional patient information, such as age, gender, and medical history.'),
});
export type ExplainLabResultsInput = z.infer<typeof ExplainLabResultsInputSchema>;

const ExplainLabResultsOutputSchema = z.object({
  explanation: z
    .string()
    .describe('A plain language explanation of the lab results, highlighting potential health risks or areas of concern.'),
});
export type ExplainLabResultsOutput = z.infer<typeof ExplainLabResultsOutputSchema>;

export async function explainLabResults(input: ExplainLabResultsInput): Promise<ExplainLabResultsOutput> {
  return explainLabResultsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'explainLabResultsPrompt',
  input: {schema: ExplainLabResultsInputSchema},
  output: {schema: ExplainLabResultsOutputSchema},
  prompt: `You are an expert medical professional specializing in explaining lab results to patients.

You will receive lab results data and, optionally, patient information. Your task is to provide a clear and concise explanation of the results in plain language, highlighting any potential health risks or areas of concern.

Lab Results:
{{labResults}}

Patient Information (if available):
{{patientInformation}}

Explanation:`,
});

const explainLabResultsFlow = ai.defineFlow(
  {
    name: 'explainLabResultsFlow',
    inputSchema: ExplainLabResultsInputSchema,
    outputSchema: ExplainLabResultsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
